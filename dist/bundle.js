/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/old-app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/modules/testLog.js":
/*!********************************!*\
  !*** ./src/modules/testLog.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nlet testLog = 'this text is coming from the testLog.js file';\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (testLog);\n\n//# sourceURL=webpack:///./src/modules/testLog.js?");

/***/ }),

/***/ "./src/old-app.js":
/*!************************!*\
  !*** ./src/old-app.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_testLog_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/testLog.js */ \"./src/modules/testLog.js\");\n\nconsole.log(_modules_testLog_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//Game info and functions\nvar game = {\n  win: false, //tracks if won game\n  over: true, //tracks game over or not\n  continuous: false, //tracks continous or boss mode\n  score: 0, //tracks current kill score\n  highScore: 0, //tracks high score\n  level: 1, //which level player is on\n  needToKill: 1, //tracks how many enemies link needs to kill to progress\n  now: null, //current game time\n  endTime: null, //tracks game end time\n  soundFx: true, //soundFx on or off\n  // delta: null,  //change in now and then game time, ie frame rate\n  // then: null,  ////previous game time (last frame)\n\n  setGameNow: function () {\n    //sets game time\n    game.now = Date.now();\n  },\n\n  //sets kills required to pass level\n  setNeedToKill: function () {\n    switch (true) {\n      case this.level === 1:\n        this.needToKill = 1;\n        break;\n      case this.level === 2:\n        this.needToKill = 3;\n        break;\n      case this.level === 3:\n        this.needToKill = 6;\n        break;\n      case this.level === 4:\n        this.needToKill = 10;\n        break;\n      case this.level === 5:\n        this.needToKill = 14;\n        break;\n      case this.level === 6:\n        this.needToKill = 18;\n        break;\n      case this.level === 7:\n        this.needToKill = 22; //up to correct count\n        break;\n      case this.level === 8:\n        this.needToKill = 22;\n        break;\n      case this.level === 9:\n        this.needToKill = 22;\n        break;\n      case this.level === 10:\n        this.needToKill = 22;\n        break;\n    };\n  }\n};\n\n//Defining backgroundMap canvas\nvar backgroundMap = document.getElementById('background-map');\nvar ctxBackgroundMap = backgroundMap.getContext('2d');\nvar backgroundImage = new Image();\nbackgroundImage.src = 'images/overworld_map.png';\nvar backgroundWinImage = new Image();\nbackgroundWinImage.src = 'images/castle.png';\nbackgroundMap.width = 512;\nbackgroundMap.height = 352;\n\n//Random starting x and y points for map\nvar xMapStart = function (spriteWidth) {\n  return Math.floor(Math.random() * 16) * 256;\n};\nvar yMapStart = function (spriteHeight) {\n  return Math.floor(Math.random() * 8) * 176;\n};\n\nvar background = {\n  image: backgroundImage,\n  winImage: backgroundWinImage,\n  xFrame: xMapStart(), //x axis start of current map frame (from src img)\n  yFrame: yMapStart(), //y axis start of current map frame (from src img)\n  moveSpeed: 4, //speed at which map moves frames\n  mapCounter: 0, //count map frame slides for map move function\n  pngWidth: 256, //map frame width from src img\n  pngHeight: 176, //map frame height from src img\n  mapWidth: backgroundMap.width, //how wide the background will be on canvas\n  mapHeight: backgroundMap.height, //how tall the background will be on canvas\n  moveMapFrameAnimation: null,\n  mapMoving: false, //tracks if map is moving\n  moveMapUp: false, //turns on map moving up\n  moveMapDown: false, //turns on map moving down\n  moveMapLeft: false, //turns on map moving left\n  moveMapRight: false, //turns on map moving right\n\n  moveMapFrameUpStart: function () {\n    link.yMove += background.moveSpeed * 1.25;\n    background.yFrame -= background.moveSpeed * 0.6875;\n    background.mapCounter++;\n  },\n\n  moveMapFrameUpStop: function () {\n    background.mapCounter = 0;\n    background.mapMoving = false;\n    background.moveMapUp = false;\n    link.yMove = backgroundMap.height - link.spriteHeight;\n    game.level += 1;\n    game.setNeedToKill();\n    allEnemies.forEach(function (baddy) {\n      if (baddy !== moblin && baddy.dead && game.level >= baddy.levelShowUp) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      } else if (baddy === moblin && baddy.dead && game.level >= baddy.levelShowUp && game.level % 5 === 0) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      };\n    });\n    if (link.life <= 3) {\n      heart.show = true;\n    };\n    if (link.life <= 1 || game.level >= 10 && game.level % 5 === 0) {\n      bigHeart.show = true;\n    };\n  },\n\n  moveMapFrameDownStart: function () {\n    link.yMove -= background.moveSpeed * 1.25;\n    background.yFrame += background.moveSpeed * 0.6875;\n    background.mapCounter++;\n  },\n\n  moveMapFrameDownStop: function () {\n    background.mapCounter = 0;\n    background.mapMoving = false;\n    background.moveMapDown = false;\n    link.yMove = 0;\n    game.level += 1;\n    game.setNeedToKill();\n    allEnemies.forEach(function (baddy) {\n      if (baddy !== moblin && baddy.dead && game.level >= baddy.levelShowUp) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      } else if (baddy === moblin && baddy.dead && game.level >= baddy.levelShowUp && game.level % 5 === 0) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      };\n    });\n    if (link.life <= 3) {\n      heart.show = true;\n    };\n    if (link.life <= 1 || game.level >= 10 && game.level % 5 === 0) {\n      bigHeart.show = true;\n    };\n  },\n\n  moveMapFrameLeftStart: function () {\n    link.xMove += background.moveSpeed * 1.85;\n    background.xFrame -= background.moveSpeed;\n    background.mapCounter++;\n  },\n\n  moveMapFrameLeftStop: function () {\n    background.mapCounter = 0;\n    background.mapMoving = false;\n    background.moveMapLeft = false;\n    link.xMove = backgroundMap.width - link.spriteWidth;\n    game.level += 1;\n    game.setNeedToKill();\n    allEnemies.forEach(function (baddy) {\n      if (baddy !== moblin && baddy.dead && game.level >= baddy.levelShowUp) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      } else if (baddy === moblin && baddy.dead && game.level >= baddy.levelShowUp && game.level % 5 === 0) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      };\n    });\n    if (link.life <= 3) {\n      heart.show = true;\n    };\n    if (link.life <= 1 || game.level >= 10 && game.level % 5 === 0) {\n      bigHeart.show = true;\n    };\n  },\n\n  moveMapFrameRightStart: function () {\n    link.xMove -= background.moveSpeed * 1.85;\n    background.xFrame += background.moveSpeed;\n    background.mapCounter++;\n  },\n\n  moveMapFrameRightStop: function () {\n    background.mapCounter = 0;\n    background.mapMoving = false;\n    background.moveMapRight = false;\n    link.xMove = 0;\n    game.level += 1;\n    game.setNeedToKill();\n    allEnemies.forEach(function (baddy) {\n      if (baddy !== moblin && baddy.dead && game.level >= baddy.levelShowUp) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      } else if (baddy === moblin && baddy.dead && game.level >= baddy.levelShowUp && game.level % 5 === 0) {\n        baddy.dead = false;\n        baddy.life = baddy.maxLife;\n      };\n    });\n    if (link.life <= 3) {\n      heart.show = true;\n    };\n    if (link.life <= 1 || game.level >= 10 && game.level % 5 === 0) {\n      bigHeart.show = true;\n    };\n  }\n};\n\n//Defining sprite and enemy map canvas'\nvar explosionCanvas = document.getElementById('explosion-canvas');\nvar ctxExplosionCanvas = explosionCanvas.getContext('2d');\nexplosionCanvas.width = 512;\nexplosionCanvas.height = 352;\n\nvar enemyMap = document.getElementById('enemy-map');\nvar ctxEnemyMap = enemyMap.getContext('2d');\nenemyMap.width = 512;\nenemyMap.height = 352;\n\nvar deathCanvas = document.getElementById('death-canvas');\nvar ctxDeathCanvas = deathCanvas.getContext('2d');\ndeathCanvas.width = 512;\ndeathCanvas.height = 352;\n\nvar spriteMap = document.getElementById('sprite-map');\nvar ctxSpriteMap = spriteMap.getContext('2d');\nspriteMap.width = 512;\nspriteMap.height = 352;\n\nvar winCanvas = document.getElementById('win-canvas');\nvar ctxWinCanvas = winCanvas.getContext('2d');\nwinCanvas.width = 512;\nwinCanvas.height = 352;\n\n//Random Number Generators\nvar coinFlip = function (num) {\n  switch (Math.floor(Math.random() * num)) {\n    case 0:\n      return 0;\n      break;\n    case 1:\n      return 1;\n      break;\n    case 2:\n      return 2;\n      break;\n    case 3:\n      return 3;\n      break;\n  }\n};\n\n//Random starting x and y points\nvar xStarting = function (spriteWidth) {\n  return Math.floor(Math.random() * (510 - spriteWidth));\n};\nvar yStarting = function (spriteHeight) {\n  return Math.floor(Math.random() * (350 - spriteHeight));\n};\n\n//Define character images\nvar explosionPng = new Image();\nexplosionPng.src = 'images/explosion-death.png';\n\nvar bossExplosionPng = new Image();\nbossExplosionPng.src = 'images/boss-explosion.png';\n\nvar linkPng = new Image();\nlinkPng.src = 'images/link-spritesheet.png';\n\nvar zeldaPng = new Image();\nzeldaPng.src = 'images/zelda.png';\n\nvar tektitePng = new Image();\ntektitePng.src = 'images/tektite.png';\n\nvar keesePng = new Image();\nkeesePng.src = 'images/keese.png';\n\nvar gibdoPng = new Image();\ngibdoPng.src = 'images/gibdo.png';\n\nvar stalfosPng = new Image();\nstalfosPng.src = 'images/stalfos.png';\n\nvar dodongoPng = new Image();\ndodongoPng.src = 'images/dodongo.png';\n\nvar armosPng = new Image();\narmosPng.src = 'images/armos.png';\n\nvar wizzrobePng = new Image();\nwizzrobePng.src = 'images/wizzrobe.png';\n\nvar darknutPng = new Image();\ndarknutPng.src = 'images/darknut.png';\n\nvar aquamentusPng = new Image();\naquamentusPng.src = 'images/aquamentus.png';\n\nvar moblinPng = new Image();\nmoblinPng.src = 'images/moblin.png';\n\nvar heartPng = new Image();\nheartPng.src = 'images/heart.gif';\n\nvar bigHeartPng = new Image();\nbigHeartPng.src = 'images/big-heart.png';\n\n//Define hearts\nvar heart = {\n  image: heartPng,\n  xFrame: 57, //x starting point of src img for sprite frame\n  yFrame: 62, //y starting point of src img for sprite frame\n  pngWidth: 59, //width of src img sprite size\n  pngHeight: 59, //height of src img sprite size\n  spriteWidth: 18, //width of sprite on canvas\n  spriteHeight: 18, //height of sprite on canvas\n  x: xStarting(20), //x value where to display heart\n  y: yStarting(20), //y value where to display heart\n  show: false,\n  heartAnimation: null\n};\n\nvar bigHeart = {\n  image: bigHeartPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 13, //width of src img sprite size\n  pngHeight: 13, //height of src img sprite size\n  spriteWidth: 30, //width of sprite on canvas\n  spriteHeight: 30, //height of sprite on canvas\n  x: xStarting(80), //x value where to display heart\n  y: yStarting(80), //y value where to display heart\n  show: false,\n  heartAnimation: null\n};\n\n//Define enemies\n\n//spider creature, jumps up to 3 spaces, slowly and randomly\n//worth 1 point || strength 0.5 || max life 1\n//level 1+\nvar tektite = {\n  image: tektitePng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 15, //height of src img sprite size\n  spriteWidth: 37.5, //width of sprite on canvas\n  spriteHeight: 40, //height of sprite on canvas\n  xMove: xStarting(40), //x point of tektite on canvas\n  yMove: yStarting(45), //y point of tektite on canvas\n  xCenter: 18.75, //x center of hit box\n  yCenter: 20, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 16, //number of px to move\n  numberOfSpaces: [0, 1, 2, 3], //possible spaces moved\n  type: 'random', //what type of enemy\n  life: 1, //how much current life\n  maxLife: 1, //how much starting life is\n  strength: 0.5, //how much life taken per hit to link\n  dead: false, //tracks if dead or not\n  points: 1, //how many points killing tektite is worth\n  levelShowUp: 1, //first level seen\n\n  moveTektite: function () {\n    //Moves if coinFlip is 1\n    if (coinFlip(55) === 0) {\n      var tektiteJump = coinFlip(4);\n      if (tektiteJump === 0) {\n        //for negative x movement\n        if (this.xMove >= 64) {\n          this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(4)];\n        } else if (this.xMove >= 48) {\n          this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(3)];\n        } else if (this.xMove >= 32) {\n          this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (tektiteJump === 1) {\n        //for positive x movement\n        if (this.xMove <= 432) {\n          this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(4)];\n        } else if (this.xMove <= 448) {\n          this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(3)];\n        } else if (this.xMove <= 464) {\n          this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (tektiteJump === 2) {\n        //for negative y movement\n        if (this.yMove >= 64) {\n          this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(4)];\n        } else if (this.yMove >= 48) {\n          this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(3)];\n        } else if (this.yMove >= 32) {\n          this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (tektiteJump === 3) {\n        //for positive y movement\n        if (this.yMove <= 272) {\n          this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(4)];\n        } else if (this.yMove <= 288) {\n          this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(3)];\n        } else if (this.yMove <= 304) {\n          this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      };\n    };\n  }\n};\n\n//bat creature, moves 1 space, normal speed and randomly\n//worth 1 point || strength 0.5 || max life 1\n// level 2+\nvar keese = {\n  image: keesePng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 10, //height of src img sprite size\n  spriteWidth: 36, //width of sprite on canvas\n  spriteHeight: 22.5, //height of sprite on canvas\n  xMove: xStarting(40), //x point of keese on canvas\n  yMove: yStarting(45), //y point of keese on canvas\n  xCenter: 18.75, //x center of hit box\n  yCenter: 20, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 16, //number of px to move\n  numberOfSpaces: [0, 1], //possible spaces moved\n  type: 'random', //what type of enemy\n  life: 0, //how much current life\n  maxLife: 1, //how much starting life\n  strength: 0.5, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 1, //how many points killing keese is worth\n  levelShowUp: 2, //first level seen\n\n  moveKeese: function () {\n    //Moves if coinFlip is 1\n    if (coinFlip(20) === 0) {\n      var keeseJump = coinFlip(4);\n      if (keeseJump === 0) {\n        //for negative x movement\n        if (this.xMove >= 32) {\n          this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (keeseJump === 1) {\n        //for positive x movement\n        if (this.xMove <= 464) {\n          this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (keeseJump === 2) {\n        //for negative y movement\n        if (this.yMove >= 32) {\n          this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      } else if (keeseJump === 3) {\n        //for positive y movement\n        if (this.yMove <= 304) {\n          this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n        };\n      };\n    };\n  }\n};\n\n//mummy creature, moves 1px frequently, somewhat slow and towards link\n//worth 1 point || strength 1 || max life 2\n//level 3+\nvar gibdo = {\n  image: gibdoPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 43, //width of sprite on canvas\n  spriteHeight: 43, //height of sprite on canvas\n  xMove: xStarting(50), //x point of gibdo on canvas\n  yMove: yStarting(50), //y point of gibdo on canvas\n  xCenter: 18.75, //x center of hit box\n  yCenter: 20, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 1.75, //number of px to move\n  numberOfSpaces: [0, 1], //possible spaces moved\n  type: 'smart', //what type of enemy\n  life: 0, //how much life\n  maxLife: 2, //how much starting life\n  strength: 1, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 1, //how many points killing gibdo is worth\n  levelShowUp: 3, //first level seen\n\n  moveGibdo: function () {\n    //Moves on coinFlip\n    if (coinFlip(2) === 0) {\n      if (this.xMove - link.xMove >= 0) {\n        this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n      } else if (this.xMove - link.xMove < 0) {\n        this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n      }\n    } else if (coinFlip(2) === 1) {\n      if (this.yMove - link.yMove >= 0) {\n        this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n      } else if (this.yMove - link.yMove < 0) {\n        this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(2)];\n      };\n    };\n  }\n};\n\n//skeleton creature, moves quickly towards link\n//worth 1 point || strength 1.5 || max life 2\n// level 4+\nvar stalfos = {\n  image: stalfosPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 43, //width of sprite on canvas\n  spriteHeight: 43, //height of sprite on canvas\n  xMove: xStarting(50), //x point of stalfos on canvas\n  yMove: yStarting(50), //y point of stalfos on canvas\n  xCenter: 18.75, //x center of hit box\n  yCenter: 20, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 2, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'smart', //what type of enemy\n  life: 0, //how much life\n  maxLife: 2, //how much starting life\n  strength: 1.5, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 1, //how many points killing stalfos is worth\n  levelShowUp: 4, //first level seen\n\n  moveStalfos: function () {\n    //Moves if coinFlip is 1\n    if (coinFlip(2) === 0) {\n      if (this.xMove - link.xMove >= 0) {\n        this.xMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(1)];\n      } else if (this.xMove - link.xMove < 0) {\n        this.xMove += this.moveSpeed * this.numberOfSpaces[coinFlip(1)];\n      }\n    } else if (coinFlip(2) === 1) {\n      if (this.yMove - link.yMove >= 0) {\n        this.yMove -= this.moveSpeed * this.numberOfSpaces[coinFlip(1)];\n      } else if (this.yMove - link.yMove < 0) {\n        this.yMove += this.moveSpeed * this.numberOfSpaces[coinFlip(1)];\n      };\n    };\n  }\n};\n\n//dinosaur creature, moves normal across the screen, L to R\n//worth 2 points || strength 2.5 || max life 3\n// level 5+\nvar dodongo = {\n  image: dodongoPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 32, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 90, //width of sprite on canvas\n  spriteHeight: 45, //height of sprite on canvas\n  xMove: -100, //x point of dodongo on canvas\n  yMove: yStarting(50), //y point of dodongo on canvas\n  xCenter: 18.75, //x center of hit box\n  yCenter: 20, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 0.9, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'xRightRunner', //what type of enemy\n  life: 0, //how much life\n  maxLife: 3, //how much starting life\n  strength: 2.5, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 2, //how many points killing dodongo is worth\n  levelShowUp: 5, //first level seen\n\n  moveDodongo: function () {\n    this.xMove += this.moveSpeed;\n  }\n};\n\n//statue knight creature, stands still until link is near then moves towards\n//worth 2 points || strength 2 || max life 2\n// level 6+\nvar armos = {\n  image: armosPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 47, //width of sprite on canvas\n  spriteHeight: 47, //height of sprite on canvas\n  xMove: xStarting(80), //x point of armos on canvas\n  yMove: yStarting(70), //y point of armos on canvas\n  xCenter: 23, //x center of hit box\n  yCenter: 23, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 1.2, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'smart', //what type of enemy\n  life: 0, //how much life\n  maxLife: 2, //how much starting life\n  strength: 2, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 3, //how many points killing armos is worth\n  levelShowUp: 6, //first level seen\n\n  moveArmos: function () {\n    //stands still until link is close, then charges link\n    var lx = link.xMove;\n    var ly = link.yMove;\n    var tx = this.xMove;\n    var ty = this.yMove;\n    if (lx - tx > 0 && lx - tx < 115 && ly - ty > 0 && ly - ty < 115) {\n      //diagonally down right\n      this.xMove += this.moveSpeed;\n      this.yMove += this.moveSpeed;\n    } else if (lx - tx > 0 && lx - tx < 115 && ly - ty < 0 && ly - ty > -115) {\n      //diagonally up right\n      this.xMove += this.moveSpeed;\n      this.yMove -= this.moveSpeed;\n    } else if (lx - tx < 0 && lx - tx > -115 && ly - ty < 0 && ly - ty > -115) {\n      //diagonally top left\n      this.xMove -= this.moveSpeed;\n      this.yMove -= this.moveSpeed;\n    } else if (lx - tx < 0 && lx - tx > -115 && ly - ty > 0 && ly - ty < 115) {\n      //diagonally down left\n      this.xMove -= this.moveSpeed;\n      this.yMove += this.moveSpeed;\n    };\n  }\n};\n\n//scared wizard creature, runs away from link\n//worth 1 point || strength 1 || max life 2\n//leve 7+\nvar wizzrobe = {\n  image: wizzrobePng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 15, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 40.3125, //width of sprite on canvas\n  spriteHeight: 43, //height of sprite on canvas\n  xMove: xStarting(45), //x point of wizzrobe on canvas\n  yMove: yStarting(45), //y point of wizzrobe on canvas\n  xCenter: 23, //x center of hit box\n  yCenter: 23, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 1, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'scared', //what type of enemy\n  life: 0, //how much life\n  maxLife: 2, //how much starting life\n  strength: 1, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 1, //how many points killing wizzrobe is worth\n  levelShowUp: 7, //first level seen\n\n  moveWizzrobe: function () {\n    //move diagonally bottom right\n    if (this.xMove - link.xMove >= 0 && this.yMove - link.yMove >= 0) {\n      if (this.xMove < 445 && this.yMove < 285) {\n        this.xMove += this.moveSpeed;\n        this.yMove += this.moveSpeed;\n      } else if (this.xMove >= 445 && this.yMove < 285) {\n        this.yMove += this.moveSpeed;\n      } else if (this.xMove < 445 && this.yMove >= 285) {\n        this.xMove += this.moveSpeed;\n      } else if (this.xMove >= 445 && this.yMove >= 285) {\n        this.xMove = 230;\n        this.yMove = 140;\n      };\n      //move diagonally top right\n    } else if (this.xMove - link.xMove >= 0 && this.yMove - link.yMove <= 0) {\n      if (this.xMove < 445 && this.yMove > 0) {\n        this.xMove += this.moveSpeed;\n        this.yMove -= this.moveSpeed;\n      } else if (this.xMove >= 445 && this.yMove > 0) {\n        this.yMove -= this.moveSpeed;\n      } else if (this.xMove < 445 && this.yMove <= 0) {\n        this.xMove += this.moveSpeed;\n      } else if (this.xMove >= 445 && this.yMove <= 0) {\n        this.xMove = 230;\n        this.yMove = 140;\n      };\n      //move diagonally top left\n    } else if (this.xMove - link.xMove <= 0 && this.yMove - link.yMove <= 0) {\n      if (this.xMove > 0 && this.yMove > 0) {\n        this.xMove -= this.moveSpeed;\n        this.yMove -= this.moveSpeed;\n      } else if (this.xMove <= 0 && this.yMove > 0) {\n        this.yMove -= this.moveSpeed;\n      } else if (this.xMove > 0 && this.yMove <= 0) {\n        this.xMove -= this.moveSpeed;\n      } else if (this.xMove <= 0 && this.yMove <= 0) {\n        this.xMove = 230;\n        this.yMove = 140;\n      };\n      //move diagonally bottom left\n    } else if (this.xMove - link.xMove <= 0 && this.yMove - link.yMove >= 0) {\n      if (this.xMove > 0 && this.yMove < 285) {\n        this.xMove -= this.moveSpeed;\n        this.yMove += this.moveSpeed;\n      } else if (this.xMove <= 0 && this.yMove < 285) {\n        this.yMove += this.moveSpeed;\n      } else if (this.xMove > 0 && this.yMove >= 285) {\n        this.xMove -= this.moveSpeed;\n      } else if (this.xMove <= 0 && this.yMove >= 285) {\n        this.xMove = 230;\n        this.yMove = 140;\n      }\n    };\n  }\n};\n\n//knight creature rushes down screen like dodongo but faster or randomly after enemy dies\n//worth 3 points || strength 2.5 || max life 1\n// level 8+\nvar darknut = {\n  image: darknutPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 45, //width of sprite on canvas\n  spriteHeight: 45, //height of sprite on canvas\n  xMove: xStarting(50), //x point of darknut on canvas\n  yMove: -60, //y point of darknut on canvas\n  xCenter: 23, //x center of hit box\n  yCenter: 23, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 1.6, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'yRunner', //what type of enemy\n  life: 0, //how much life\n  maxLife: 1, //how much starting life\n  strength: 2.5, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 4, //how many points killing darknut is worth\n  levelShowUp: 8, //first level seen\n\n  moveDarknut: function () {\n    this.yMove += this.moveSpeed;\n  }\n};\n\n//loch ness monster creature, rush across screen R to L, goes towards link if hes near\n//worth 3 points || strength 2 || max life 2\n// level 9+\nvar aquamentus = {\n  image: aquamentusPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 24, //width of src img sprite size\n  pngHeight: 32, //height of src img sprite size\n  spriteWidth: 41.25, //width of sprite on canvas\n  spriteHeight: 55, //height of sprite on canvas\n  xMove: 555, //x point of aquamentus on canvas\n  yMove: yStarting(60), //y point of aquamentus on canvas\n  xCenter: 19, //x center of hit box\n  yCenter: 25, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 1.15, //number of px to move\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'xLeftRunner', //what type of enemy\n  life: 0, //how much life\n  maxLife: 2, //how much starting life\n  strength: 2, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 3, //how many points killing aquamentus is worth\n  levelShowUp: 9, //first level seen\n\n  moveAquamentus: function () {\n    //charges link if close, otherwise charges left\n    var lx = link.xMove;\n    var ly = link.yMove;\n    var tx = this.xMove;\n    var ty = this.yMove;\n    if (lx - tx > 0 && lx - tx < 100 && ly - ty > 0 && ly - ty < 100) {\n      //diagonally down right\n      this.xMove += this.moveSpeed;\n      this.yMove += this.moveSpeed;\n    } else if (lx - tx > 0 && lx - tx < 100 && ly - ty < 0 && ly - ty > -100) {\n      //diagonally up right\n      this.xMove += this.moveSpeed;\n      this.yMove -= this.moveSpeed;\n    } else if (lx - tx < 0 && lx - tx > -100 && ly - ty < 0 && ly - ty > -100) {\n      //diagonally top left\n      this.xMove -= this.moveSpeed;\n      this.yMove -= this.moveSpeed;\n    } else if (lx - tx < 0 && lx - tx > -100 && ly - ty > 0 && ly - ty < 100) {\n      //diagonally down left\n      this.xMove -= this.moveSpeed;\n      this.yMove += this.moveSpeed;\n    } else {\n      this.xMove -= this.moveSpeed;\n    };\n  }\n};\n\n//boss - goblin type creature, 3 stages 1) circle, 2) runner, 3) scared\n//worth 5 points || strength 1 || max life 6\n//level 10\nvar moblin = {\n  image: moblinPng,\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  pngWidth: 16, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 65, //width of sprite on canvas\n  spriteHeight: 65, //height of sprite on canvas\n  xMove: xStarting(70), //x point of moblin on canvas\n  yMove: yStarting(70), //y point of moblin on canvas\n  xCenter: 35, //x center of hit box\n  yCenter: 35, //y center of hit box\n  moveAnimation: null, //movement AI\n  moveDirection: [undefined.xMove, undefined.yMove], //move directions\n  moveSpeed: 2.1, //number of px to move\n  cycleOne: 11, //cycle of movement for stage one\n  cycleTwo: 11, //cycle of movement for stage two\n  numberOfSpaces: [1], //possible spaces moved\n  type: 'boss', //what type of enemy\n  life: 0, //how much life\n  maxLife: 6, //how much starting life\n  strength: 1, //how much life taken per hit to link\n  dead: true, //tracks if dead or not\n  points: 5, //how many points killing moblin is worth\n  levelShowUp: 10, //first level seen\n\n  moveMoblin: function () {\n    if (this.life > 4) {\n      //Stage One\n      this.moveSpeed = 2.1;\n      if (this.cycleOne === 11) {\n        //Move R\n        if (this.xMove < 447) {\n          this.xMove += this.moveSpeed;\n        } else if (this.xMove >= 447) {\n          this.cycleOne++;\n        };\n      } else if (this.cycleOne === 12) {\n        //Move slightly back L\n        if (this.xMove > 400) {\n          this.xMove -= this.moveSpeed;\n        } else if (this.xMove <= 400) {\n          this.cycleOne = 21;\n        };\n      } else if (this.cycleOne === 21) {\n        //Move Up\n        if (this.yMove > 0) {\n          this.yMove -= this.moveSpeed;\n        } else if (this.yMove <= 0) {\n          this.cycleOne++;\n        };\n      } else if (this.cycleOne === 22) {\n        //Move slightly back down\n        if (this.yMove < 75) {\n          this.yMove += this.moveSpeed;\n        } else if (this.yMove >= 75) {\n          this.cycleOne = 31;\n        };\n      } else if (this.cycleOne === 31) {\n        //Move Left\n        if (this.xMove > 0) {\n          this.xMove -= this.moveSpeed;\n        } else if (this.xMove <= 0) {\n          this.cycleOne++;\n        };\n      } else if (this.cycleOne === 32) {\n        //Move slightly back right\n        if (this.xMove < 115) {\n          this.xMove += this.moveSpeed;\n        } else if (this.xMove >= 115) {\n          this.cycleOne = 41;\n        };\n      } else if (this.cycleOne === 41) {\n        //Move down\n        if (this.yMove < 287) {\n          this.yMove += this.moveSpeed;\n        } else if (this.yMove >= 287) {\n          this.cycleOne++;\n        };\n      } else if (this.cycleOne === 42) {\n        //Move slight back up\n        if (this.yMove > 200) {\n          this.yMove -= this.moveSpeed;\n        } else if (this.yMove <= 200) {\n          this.cycleOne = 11;\n        };\n      };\n    } else if (this.life > 2) {\n      //Stage Two\n      this.moveSpeed = 2;\n      if (this.cycleTwo === 11) {\n        //Top to Bottom\n        if (this.yMove < 430) {\n          this.yMove += this.moveSpeed;\n        } else if (this.yMove >= 430) {\n          this.xMove = -80;\n          this.yMove = 110;\n          this.cycleTwo++;\n        };\n      } else if (this.cycleTwo === 12) {\n        //L to R\n        if (this.xMove < 590) {\n          this.xMove += this.moveSpeed;\n        } else if (this.xMove >= 590) {\n          this.xMove = 150;\n          this.yMove = 365;\n          this.cycleTwo++;\n        };\n      } else if (this.cycleTwo === 13) {\n        //Bottom to Top\n        if (this.yMove > -80) {\n          this.yMove -= this.moveSpeed;\n        } else if (this.yMove <= -80) {\n          this.xMove = 590;\n          this.yMove = 240;\n          this.cycleTwo++;\n        };\n      } else if (this.cycleTwo === 14) {\n        //R to L\n        if (this.xMove > -80) {\n          this.xMove -= this.moveSpeed;\n        } else if (this.xMove <= -80) {\n          this.xMove = 350;\n          this.yMove = -80;\n          this.cycleTwo = 11;\n        };\n      };\n    } else if (this.life > 0) {\n      //Stage Three\n      this.moveSpeed = 1.2;\n      //move diagonally bottom right\n      if (this.xMove - link.xMove >= 0 && this.yMove - link.yMove >= 0) {\n        if (this.xMove < 445 && this.yMove < 285) {\n          this.xMove += this.moveSpeed;\n          this.yMove += this.moveSpeed;\n        } else if (this.xMove >= 445 && this.yMove < 285) {\n          this.yMove += this.moveSpeed;\n        } else if (this.xMove < 445 && this.yMove >= 285) {\n          this.xMove += this.moveSpeed;\n        } else if (this.xMove >= 445 && this.yMove >= 285) {\n          this.xMove = 230;\n          this.yMove = 140;\n        };\n        //move diagonally top right\n      } else if (this.xMove - link.xMove >= 0 && this.yMove - link.yMove <= 0) {\n        if (this.xMove < 445 && this.yMove > 0) {\n          this.xMove += this.moveSpeed;\n          this.yMove -= this.moveSpeed;\n        } else if (this.xMove >= 445 && this.yMove > 0) {\n          this.yMove -= this.moveSpeed;\n        } else if (this.xMove < 445 && this.yMove <= 0) {\n          this.xMove += this.moveSpeed;\n        } else if (this.xMove >= 445 && this.yMove <= 0) {\n          this.xMove = 230;\n          this.yMove = 140;\n        };\n        //move diagonally top left\n      } else if (this.xMove - link.xMove <= 0 && this.yMove - link.yMove <= 0) {\n        if (this.xMove > 0 && this.yMove > 0) {\n          this.xMove -= this.moveSpeed;\n          this.yMove -= this.moveSpeed;\n        } else if (this.xMove <= 0 && this.yMove > 0) {\n          this.yMove -= this.moveSpeed;\n        } else if (this.xMove > 0 && this.yMove <= 0) {\n          this.xMove -= this.moveSpeed;\n        } else if (this.xMove <= 0 && this.yMove <= 0) {\n          this.xMove = 230;\n          this.yMove = 140;\n        };\n        //move diagonally bottom left\n      } else if (this.xMove - link.xMove <= 0 && this.yMove - link.yMove >= 0) {\n        if (this.xMove > 0 && this.yMove < 285) {\n          this.xMove -= this.moveSpeed;\n          this.yMove += this.moveSpeed;\n        } else if (this.xMove <= 0 && this.yMove < 285) {\n          this.yMove += this.moveSpeed;\n        } else if (this.xMove > 0 && this.yMove >= 285) {\n          this.xMove -= this.moveSpeed;\n        } else if (this.xMove <= 0 && this.yMove >= 285) {\n          this.xMove = 230;\n          this.yMove = 140;\n        }\n      };\n    } else if (this.life <= 0 && !game.continuous) {\n      game.win;\n    };\n  }\n};\n\n//rest xRightRunner offscreen enemies\nvar xRightResetOffscreenEnemies = function (enemy) {\n  enemy.xMove = -100;\n  enemy.yMove = yStarting(enemy.spriteHeight);\n};\n\n//rest xLeftRunner offscreen enemies\nvar xLeftResetOffscreenEnemies = function (enemy) {\n  enemy.xMove = 555;\n  enemy.yMove = yStarting(enemy.spriteHeight);\n};\n\n//rest y offscreen enemies\nvar yResetOffscreenEnemies = function (enemy) {\n  enemy.xMove = xStarting(enemy.spriteWidth);\n  enemy.yMove = -60;\n};\n\n//All enemies array\nvar allEnemies = [tektite, keese, gibdo, stalfos, dodongo, armos, wizzrobe, darknut, aquamentus, moblin];\n\nvar liveEnemies = [];\nvar areEnemiesDead = null;\n\n//Define player\n//Player, aka Link\nvar link = {\n  image: linkPng, //src image\n  xFrame: 0, //x starting point of src img for sprite frame\n  yFrame: 0, //y starting point of src img for sprite frame\n  upFrame: 0, //placeholder for frame iteration\n  downFrame: 0, //placeholder for frame iteration\n  leftFrame: 0, //placeholder for frame iteration\n  rightFrame: 0, //placeholder for frame iteration\n  pngWidth: 15, //width of src img sprite size\n  pngHeight: 16, //height of src img sprite size\n  spriteWidth: 31.875, //width of sprite on canvas\n  spriteHeight: 34, //height of sprite on canvas\n  xMove: xStarting(32), //x point of link on canvas\n  yMove: yStarting(35), //y point of link on canvas\n  moveSpeed: 3, //number of px moved per interval\n  frameSpeed: 14, //number to calculate frame switch rate\n  isMoving: false, //tracks to see if moving\n  isMovingUp: false, //tracks to see if moving up\n  isMovingDown: false, //tracks to see if moving down\n  isMovingLeft: false, //tracks to see if moving left\n  isMovingRight: false, //tracks to see if moving right\n  isAttacking: false, //tracks to see if attacking\n  attackTime: null, //tracks time link attacked\n  hitTime: null, //tracks time link was hit\n  heartTime: null, //tracks time when link picked up heart\n  life: 4, //how much life left\n  maxLife: 4, //max life\n  invincible: false, //checks for invincibility\n  moveUpAnimation: null, //function for down movement\n  moveDownAnimation: null, //function for up movement\n  moveLeftAnimation: null, //function for left movement\n  moveRightAnimation: null, //function for right movement\n  upMapMove: 0, //y px where link causes map to move up\n  downMapMove: backgroundMap.height - 34, //y px where link causes map to move down\n  leftMapMove: 0, //x px where link causes map to move left\n  rightMapMove: backgroundMap.width - 32, //x px where link causes map to move right\n\n  linkAttack: function () {\n    link.attackTime = Date.now();\n  },\n\n  linkHit: function () {\n    link.hitTime = Date.now();\n  },\n\n  grabHeart: function () {\n    link.heartTime = Date.now();\n  },\n\n  //heart gif functionality\n  heartGifArray: [$('#heart-one'), $('#heart-two'), $('#heart-three'), $('#heart-four')], //heart gif icons\n\n  heartDisplay: function () {\n    if (link.life === link.maxLife) {\n      for (var i = 0; i < link.heartGifArray.length; i++) {\n        if (link.heartGifArray[i].hasClass('heart-hidden')) {\n          link.heartGifArray[i].removeClass('damaged');\n          link.heartGifArray[i].removeClass('heart-hidden');\n          link.heartGifArray[i].addClass('heart-show');\n        };\n      };\n    } else if (link.life === link.maxLife - 0.5) {\n      $('#heart-one').addClass('damaged');\n    } else if (link.life === link.maxLife - 1) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n    } else if (link.life === link.maxLife - 1.5) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n    } else if (link.life === link.maxLife - 2) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n      $('#heart-two').addClass('heart-hidden');\n    } else if (link.life === link.maxLife - 2.5) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n      $('#heart-two').addClass('heart-hidden');\n      $('#heart-three').addClass('damaged');\n    } else if (link.life === link.maxLife - 3) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n      $('#heart-two').addClass('heart-hidden');\n      $('#heart-three').addClass('damaged');\n      $('#heart-three').addClass('heart-hidden');\n    } else if (link.life === link.maxLife - 3.5) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n      $('#heart-two').addClass('heart-hidden');\n      $('#heart-three').addClass('damaged');\n      $('#heart-three').addClass('heart-hidden');\n      $('#heart-four').addClass('damaged');\n    } else if (link.life <= 0) {\n      $('#heart-one').addClass('damaged');\n      $('#heart-one').addClass('heart-hidden');\n      $('#heart-two').addClass('damaged');\n      $('#heart-two').addClass('heart-hidden');\n      $('#heart-three').addClass('damaged');\n      $('#heart-three').addClass('heart-hidden');\n      $('#heart-four').addClass('damaged');\n      $('#heart-four').addClass('heart-hidden');\n    }\n  },\n\n  moveUp: function () {\n    if (link.yMove <= link.upMapMove && game.score >= game.needToKill && background.yFrame > 0 && areEnemiesDead()) {\n      background.mapMoving = true;\n      background.moveMapUp = true;\n      ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    } else if (!background.mapMoving && link.yMove >= 0) {\n      link.yMove -= link.moveSpeed;\n      link.xFrame = 61;\n      link.yFrame = 0;\n      if (link.upFrame < link.frameSpeed / 2) {\n        link.yFrame = 30;\n        link.upFrame++;\n      } else if (link.upFrame <= link.frameSpeed) {\n        link.yFrame = 0;\n        link.upFrame++;\n      } else {\n        link.upFrame = 0;\n      };\n    };\n  },\n\n  moveDown: function () {\n    if (link.yMove >= link.downMapMove && game.score >= game.needToKill && background.yFrame < 1232 && areEnemiesDead()) {\n      background.mapMoving = true;\n      background.moveMapDown = true;\n      ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    } else if (!background.mapMoving && link.yMove <= 317) {\n      link.yMove += link.moveSpeed;\n      link.xFrame = 0;\n      link.yFrame = 0;\n      if (link.downFrame < link.frameSpeed / 2) {\n        link.yFrame = 30;\n        link.downFrame++;\n      } else if (link.downFrame <= link.frameSpeed) {\n        link.yFrame = 0;\n        link.downFrame++;\n      } else {\n        link.downFrame = 0;\n      };\n    };\n  },\n\n  moveLeft: function () {\n    if (link.xMove <= link.leftMapMove && game.score >= game.needToKill && background.xFrame > 0 && areEnemiesDead()) {\n      background.mapMoving = true;\n      background.moveMapLeft = true;\n      ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    } else if (!background.mapMoving && link.xMove >= 0) {\n      link.xMove -= link.moveSpeed;\n      link.xFrame = 29;\n      link.yFrame = 30;\n      if (link.leftFrame < link.frameSpeed * .5) {\n        link.yFrame = 0;\n        link.leftFrame++;\n      } else if (link.leftFrame <= link.frameSpeed) {\n        link.yFrame = 30;\n        link.leftFrame++;\n      } else {\n        link.leftFrame = 0;\n      };\n    };\n  },\n\n  moveRight: function () {\n    if (link.xMove >= link.rightMapMove && game.score >= game.needToKill && background.xFrame < 3840 && areEnemiesDead()) {\n      background.mapMoving = true;\n      background.moveMapRight = true;\n      ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    } else if (!background.mapMoving && link.xMove <= 479) {\n      link.xMove += link.moveSpeed;\n      link.xFrame = 90;\n      link.yFrame = 0;\n      if (link.rightFrame < link.frameSpeed / 2) {\n        link.yFrame = 30;\n        link.rightFrame++;\n      } else if (link.rightFrame <= link.frameSpeed) {\n        link.yFrame = 0;\n        link.rightFrame++;\n      } else {\n        link.rightFrame = 0;\n      };\n    };\n  },\n\n  //Player keyboard actions\n  playerAction: function (event) {\n    //Up\n    if (event.keyCode === 38 && !game.over && !game.win) {\n      if (!link.isMovingUp && !link.isMoving && !link.isAttacking && link.yMove >= 1) {\n        link.isMovingUp = true;\n        link.isMoving = true;\n      };\n    }\n    //Down\n    if (event.keyCode === 40 && !game.over && !game.win) {\n      if (!link.isMovingDown && !link.isMoving && !link.isAttacking && link.yMove <= 317) {\n        link.isMovingDown = true;\n        link.isMoving = true;\n      };\n    }\n    //Left\n    if (event.keyCode === 37 && !game.over && !game.win) {\n      if (!link.isMovingLeft && !link.isMoving && !link.isAttacking && link.xMove >= 0) {\n        link.isMovingLeft = true;\n        link.isMoving = true;\n      };\n    }\n    //Right\n    if (event.keyCode === 39 && !game.over && !game.win) {\n      if (!link.isMovingRight && !link.isMoving && !link.isAttacking && link.xMove <= 479) {\n        link.isMovingRight = true;\n        link.isMoving = true;\n      };\n    }\n    //Spacebar\n    if (event.keyCode === 32 && !game.over && !game.win) {\n      switch (true) {\n        //if facing up\n        case link.xFrame === 61:\n          link.xFrame = 60;\n          link.pngHeight = 28;\n          link.spriteHeight = 59.5;\n          link.yFrame = 84;\n          link.yMove -= 29;\n          link.isMovingUp = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing down\n        case link.xFrame === 0:\n          link.pngWidth = 16;\n          link.pngHeight = 28;\n          link.spriteHeight = 59.5;\n          link.yFrame = 84;\n          link.yMove += 3;\n          link.isMovingDown = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing left\n        case link.xFrame === 29:\n          link.xFrame = 24;\n          link.pngWidth = 28;\n          link.spriteWidth = 59.5;\n          link.yFrame = 90;\n          link.xMove -= 30;\n          link.isMovingLeft = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing right\n        case link.xFrame === 90:\n          link.xFrame = 84;\n          link.pngWidth = 28;\n          link.spriteWidth = 59.5;\n          link.yFrame = 90;\n          link.xMove += 6;\n          link.isMovingRight = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n      };\n    };\n  },\n\n  actionStop: function (event) {\n    //Stop moving up\n    if (event.keyCode === 38 && !game.over && !game.win) {\n      link.isMovingUp = false;\n      link.isMoving = false;\n      link.yFrame = 30;\n    };\n    //Stop moving down\n    if (event.keyCode === 40 && !game.over && !game.win) {\n      link.isMovingDown = false;\n      link.isMoving = false;\n      link.yFrame = 0;\n    };\n    //Stop moving left\n    if (event.keyCode === 37 && !game.over && !game.win) {\n      link.isMovingLeft = false;\n      link.isMoving = false;\n      link.yFrame = 0;\n    };\n    //Stop moving right\n    if (event.keyCode === 39 && !game.over && !game.win) {\n      link.isMovingRight = false;\n      link.isMoving = false;\n      link.yFrame = 31;\n    };\n    //Stop attacking\n    if (event.keyCode === 32 && !game.over && !game.win) {\n      switch (true) {\n        //if facing up\n        case link.xFrame === 60:\n          link.xFrame = 61;\n          link.pngHeight = 16;\n          link.spriteHeight = 34;\n          link.yFrame = 30;\n          link.yMove += 29;\n          link.isAttacking = false;\n          break;\n        //if facing down\n        case link.xFrame === 0:\n          link.pngWidth = 15;\n          link.pngHeight = 16;\n          link.spriteHeight = 34;\n          link.yFrame = 0;\n          link.yMove -= 3;\n          link.isAttacking = false;\n          break;\n        //if facing left\n        case link.xFrame === 24:\n          link.xFrame = 29;\n          link.pngWidth = 15;\n          link.spriteWidth = 31.875;\n          link.yFrame = 0;\n          link.xMove += 30;\n          link.isAttacking = false;\n          break;\n          link.yFrame = 100;\n        //if facing right\n        case link.xFrame === 84:\n          link.xFrame = 90;\n          link.pngWidth = 15;\n          link.spriteWidth = 31.875;\n          link.yFrame = 31;\n          link.xMove -= 6;\n          link.isAttacking = false;\n          break;\n      };\n    };\n  },\n\n  touchUp: function () {\n    if (!game.over && !game.win) {\n      if (!link.isMovingUp && !link.isMoving && !link.isAttacking && link.yMove >= 1) {\n        link.isMovingUp = true;\n        link.isMoving = true;\n      };\n    }\n  },\n\n  touchDown: function () {\n    if (!game.over && !game.win) {\n      if (!link.isMovingDown && !link.isMoving && !link.isAttacking && link.yMove <= 317) {\n        link.isMovingDown = true;\n        link.isMoving = true;\n      };\n    }\n  },\n\n  touchLeft: function () {\n    if (!game.over && !game.win) {\n      if (!link.isMovingLeft && !link.isMoving && !link.isAttacking && link.xMove >= 0) {\n        link.isMovingLeft = true;\n        link.isMoving = true;\n      };\n    }\n  },\n\n  touchRight: function () {\n    if (!game.over && !game.win) {\n      if (!link.isMovingRight && !link.isMoving && !link.isAttacking && link.xMove <= 479) {\n        link.isMovingRight = true;\n        link.isMoving = true;\n      };\n    }\n  },\n\n  touchAttack: function () {\n    if (!game.over && !game.win) {\n      switch (true) {\n        //if facing up\n        case link.xFrame === 61:\n          link.xFrame = 60;\n          link.pngHeight = 28;\n          link.spriteHeight = 59.5;\n          link.yFrame = 84;\n          link.yMove -= 29;\n          link.isMovingUp = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing down\n        case link.xFrame === 0:\n          link.pngWidth = 16;\n          link.pngHeight = 28;\n          link.spriteHeight = 59.5;\n          link.yFrame = 84;\n          link.yMove += 3;\n          link.isMovingDown = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing left\n        case link.xFrame === 29:\n          link.xFrame = 24;\n          link.pngWidth = 28;\n          link.spriteWidth = 59.5;\n          link.yFrame = 90;\n          link.xMove -= 30;\n          link.isMovingLeft = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n        //if facing right\n        case link.xFrame === 90:\n          link.xFrame = 84;\n          link.pngWidth = 28;\n          link.spriteWidth = 59.5;\n          link.yFrame = 90;\n          link.xMove += 6;\n          link.isMovingRight = false;\n          link.isMoving = false;\n          link.isAttacking = true;\n          break;\n      };\n    };\n  },\n\n  touchUpStop: function () {\n    if (!game.over && !game.win) {\n      link.isMovingUp = false;\n      link.isMoving = false;\n      link.yFrame = 30;\n    };\n  },\n\n  touchDownStop: function () {\n    if (!game.over && !game.win) {\n      link.isMovingDown = false;\n      link.isMoving = false;\n      link.yFrame = 0;\n    };\n  },\n\n  touchLeftStop: function () {\n    if (!game.over && !game.win) {\n      link.isMovingLeft = false;\n      link.isMoving = false;\n      link.yFrame = 0;\n    };\n  },\n\n  touchRightStop: function () {\n    if (!game.over && !game.win) {\n      link.isMovingRight = false;\n      link.isMoving = false;\n      link.yFrame = 31;\n    };\n  },\n\n  touchAttackStop: function () {\n    if (!game.over && !game.win) {\n      switch (true) {\n        //if facing up\n        case link.xFrame === 60:\n          link.xFrame = 61;\n          link.pngHeight = 16;\n          link.spriteHeight = 34;\n          link.yFrame = 30;\n          link.yMove += 29;\n          link.isAttacking = false;\n          break;\n        //if facing down\n        case link.xFrame === 0:\n          link.pngWidth = 15;\n          link.pngHeight = 16;\n          link.spriteHeight = 34;\n          link.yFrame = 0;\n          link.yMove -= 3;\n          link.isAttacking = false;\n          break;\n        //if facing left\n        case link.xFrame === 24:\n          link.xFrame = 29;\n          link.pngWidth = 15;\n          link.spriteWidth = 31.875;\n          link.yFrame = 0;\n          link.xMove += 30;\n          link.isAttacking = false;\n          break;\n          link.yFrame = 100;\n        //if facing right\n        case link.xFrame === 84:\n          link.xFrame = 90;\n          link.pngWidth = 15;\n          link.spriteWidth = 31.875;\n          link.yFrame = 31;\n          link.xMove -= 6;\n          link.isAttacking = false;\n          break;\n      };\n    };\n  }\n};\n\n//Collision Detection between Link and enemies\nvar enemyCollisionDetection = function (x1, y1, x2, y2, enemy) {\n  if (!link.isAttacking && (game.now - link.hitTime) / 1000 > 1.25 && enemy.life > 0) {\n    var xDistance = x2 - x1;\n    var yDistance = y2 - (y1 - 4);\n    var hitRadius = Math.abs(Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2)));\n    if (hitRadius <= 33 && !link.invincible) {\n      link.linkHit();\n      link.life -= enemy.strength;\n      var heartLose = new Audio('heart-lose.wav');\n      if (game.soundFx) {\n        heartLose.play();\n      };\n      link.heartDisplay();\n    };\n  } else if (link.isAttacking && (game.now - link.attackTime) / 1000 > .2 && enemy.life > 0) {\n    var xDistance = x2 - x1;\n    var yDistance = y2 - y1;\n    var hitRadius = Math.abs(Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2)));\n    var xRightAttack = x1 + 20;\n    var xDistanceRight = x2 - xRightAttack;\n    var hitRadiusRight = Math.abs(Math.sqrt(Math.pow(xDistanceRight, 2) + Math.pow(yDistance, 2)));\n    var yDownAttack = y1 + 18;\n    var yDistanceDown = y2 - yDownAttack;\n    var hitRadiusDown = Math.abs(Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistanceDown, 2)));\n    if (hitRadius <= 32 || hitRadiusRight <= 32 || hitRadiusDown <= 32) {\n      link.linkAttack();\n      enemy.life -= 1;\n      var hitEnemy = new Audio('hit-enemy.wav');\n      if (!enemy.dead && game.soundFx) {\n        hitEnemy.play();\n      };\n      if (enemy.life === 0) {\n        enemy.dead = true;\n        if (game.soundFx && enemy.type !== 'boss') {\n          var enemyExplosion = new Audio('enemy-explosion.mp3');\n          enemyExplosion.play();\n        } else if (enemy.type === 'boss') {\n          var horn = new Audio('horn.mp3');\n          horn.play();\n        };\n      };\n      if (enemy.dead) {\n        if (enemy.type !== 'boss') {\n          ctxExplosionCanvas.drawImage(explosionPng, 40, 10, 280, 285, enemy.xMove, enemy.yMove, 60, 60);\n        } else if (enemy.type === 'boss') {\n          ctxExplosionCanvas.drawImage(bossExplosionPng, 0, 0, 958, 952, moblin.xMove, moblin.yMove, 80, 80);\n        };\n        if (enemy.type !== 'xRightRunner' && enemy.type !== 'xLeftRunner' && enemy.type !== 'yRunner') {\n          enemy.xMove = xStarting(enemy.spriteWidth);\n          enemy.yMove = yStarting(enemy.spriteHeight);\n        } else if (enemy.type === 'xRightRunner') {\n          xRightResetOffscreenEnemies(enemy);\n        } else if (enemy.type === 'xLeftRunner') {\n          xLeftResetOffscreenEnemies(enemy);\n        } else if (enemy.type === 'yRunner') {\n          yResetOffscreenEnemies(enemy);\n        };\n        game.score += enemy.points;\n      };\n    };\n  };\n};\n\n//Collision detection between Link and objects\nvar heartCollisionDetection = function (x1, y1, x2, y2, object) {\n  var xDistance = x2 - x1;\n  var yDistance = y2 - y1;\n  var crashZone = Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\n  if (crashZone <= 30 && link.life <= 3.5 && object.show === true) {\n    object.show = false;\n    var heartGain = new Audio('heart-gain.mp3');\n    var bigHeartGain = new Audio('big-heart-gain.wav');\n    if (object === bigHeart) {\n      if (game.soundFx) {\n        bigHeartGain.play();\n      };\n      object.x = xStarting(object.spriteWidth);\n      object.y = yStarting(object.spriteHeight);\n      if (link.life <= 3.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life = link.maxLife;\n        $('#heart-one').removeClass('damaged');\n        $('#heart-one').removeClass('heart-hidden');\n        $('#heart-one').addClass('heart-show');\n        $('#heart-two').removeClass('damaged');\n        $('#heart-two').removeClass('heart-hidden');\n        $('#heart-two').addClass('heart-show');\n        $('#heart-three').removeClass('damaged');\n        $('#heart-three').removeClass('heart-hidden');\n        $('#heart-three').addClass('heart-show');\n        $('#heart-four').removeClass('damaged');\n      } else if (link.life === 3.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life = link.maxLife;\n        $('#heart-four').removeClass('damaged');\n      };\n    } else if (object === heart) {\n      if (game.soundFx) {\n        heartGain.play();\n      };\n      object.x = xStarting(object.spriteWidth);\n      object.y = yStarting(object.spriteHeight);\n      if (link.life === 0.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-four').removeClass('damaged');\n        $('#heart-three').removeClass('heart-hidden');\n        $('#heart-three').addClass('heart-show');\n      } else if (link.life === 1 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-three').removeClass('heart-hidden');\n        $('#heart-three').removeClass('damaged');\n        $('#heart-three').addClass('heart-show');\n      } else if (link.life === 1.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-three').removeClass('damaged');\n        $('#heart-two').removeClass('heart-hidden');\n        $('#heart-two').addClass('heart-show');\n      } else if (link.life === 2 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-two').removeClass('heart-hidden');\n        $('#heart-two').removeClass('damaged');\n        $('#heart-two').addClass('heart-show');\n      } else if (link.life === 2.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-two').removeClass('damaged');\n        $('#heart-one').removeClass('heart-hidden');\n        $('#heart-one').addClass('heart-show');\n      } else if (link.life === 3 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 1;\n        $('#heart-one').removeClass('heart-hidden');\n        $('#heart-one').removeClass('damaged');\n        $('#heart-one').addClass('heart-show');\n      } else if (link.life === 3.5 && (game.now - link.heartTime) / 1000 > 1) {\n        link.grabHeart();\n        link.life += 0.5;\n        $('#heart-one').removeClass('damaged');\n      };\n    };\n  };\n};\n\nvar startGameButton = $('#start-game');\n\n//Game over functions\n//link death spin\nvar linkDies = function () {\n  ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxSpriteMap.drawImage(link.image, link.xFrame, link.yFrame, link.pngWidth, link.pngHeight, link.xMove, link.yMove, link.spriteWidth, link.spriteHeight);\n  if (link.xFrame === 0 && link.yFrame === 0) {\n    link.xFrame = 90;\n    link.yFrame = 30;\n  } else if (link.xFrame === 90 && link.yFrame === 30) {\n    link.xFrame = 61;\n    link.yFrame = 0;\n  } else if (link.xFrame === 61 && link.yFrame === 0) {\n    link.xFrame = 29;\n    link.yFrame = 0;\n  } else if (link.xFrame === 29 && link.yFrame === 0) {\n    link.xFrame = 0;\n    link.yFrame = 0;\n  };\n};\n\n//game over screen with replay button\nvar gameOverScreen = function () {\n  ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxSpriteMap.fillStyle = 'black';\n  ctxSpriteMap.fillRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxSpriteMap.font = \"20px 'Press Start 2P'\";\n  ctxSpriteMap.fillStyle = '#afd433';\n  ctxSpriteMap.textAlign = 'center';\n  ctxSpriteMap.fillText('Game Over', 259, 180); //game over text\n};\n\n//game over function and link explosion\nvar gameOver = function () {\n  cancelAnimationFrame(animateGame);\n  ctxEnemyMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  deathCanvas.style.opacity = '0.56';\n  link.xFrame = 0;\n  link.yFrame = 0;\n  var animateLinkDeath = setInterval(linkDies, .5);\n  setTimeout(function () {\n    clearInterval(animateLinkDeath);\n    ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n    ctxSpriteMap.drawImage(explosionPng, 40, 10, 280, 285, link.xMove, link.yMove, 60, 60);\n    var linkExplosion = new Audio('link-explosion.wav');\n    if (game.soundFx) {\n      linkExplosion.play();\n    };\n    setTimeout(function () {\n      gameOverScreen();\n      startGameButton.html('Replay game');\n      startGameButton.css('visibility', 'visible');\n    }, 1000);\n  }, 2000);\n};\n\n//win game function\nvar winGame = function () {\n  cancelAnimationFrame(animateGame);\n  ctxBackgroundMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxEnemyMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n  ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n  ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n\n  ctxBackgroundMap.drawImage(background.winImage, 0, 0, 1920, 1080, 0, 0, background.mapWidth, background.mapHeight);\n  ctxSpriteMap.drawImage(link.image, 90, 30, link.pngWidth, link.pngHeight, 165, 200, 71.25, 76);\n  ctxSpriteMap.drawImage(zeldaPng, 0, 0, 14, 16, 295, 200, 66.5, 76);\n\n  ctxSpriteMap.font = \"20px 'Press Start 2P'\";\n  ctxSpriteMap.fillStyle = 'black';\n  ctxSpriteMap.fillText('Oh, you won?', 20, 40);\n\n  ctxSpriteMap.font = \"20px 'Press Start 2P'\";\n  ctxSpriteMap.fillStyle = 'black';\n  ctxSpriteMap.fillText('That\\'s neat I guess.', 20, 70);\n\n  ctxSpriteMap.font = \"20px 'Press Start 2P'\";\n  ctxSpriteMap.fillStyle = 'black';\n  ctxSpriteMap.fillText('Want a sandwich?', 20, 320);\n\n  startGameButton.html('Replay game');\n  startGameButton.css('visibility', 'visible');\n};\n\n//Animation Game Loop\nvar animateGame = null;\n\nvar animationLoop = function () {\n\n  if (link.life <= 0) {\n    game.over = true;\n  };\n\n  game.continuous = $('#continuous-play').prop('checked');\n\n  if (!game.continuous && game.level >= 10 && moblin.life <= 0) {\n    game.win = true;\n  };\n\n  if (!game.over && !game.win) {\n    game.setGameNow();\n    game.soundFx = $('#soundFx').prop('checked');\n\n    ctxEnemyMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxSpriteMap.clearRect(0, 0, spriteMap.width, spriteMap.height);\n    ctxBackgroundMap.drawImage(background.image, background.xFrame, background.yFrame, background.pngWidth, background.pngHeight, 0, 0, background.mapWidth, background.mapHeight);\n\n    //up map frame counter, call, and stop\n    if (background.moveMapUp) {\n      if (background.mapCounter < 64) {\n        background.moveMapFrameUpStart();\n      } else {\n        background.moveMapFrameUpStop();\n      };\n    };\n\n    //down map frame counter, call, and stop\n    if (background.moveMapDown) {\n      if (background.mapCounter < 64) {\n        background.moveMapFrameDownStart();\n      } else {\n        background.moveMapFrameDownStop();\n      };\n    };\n\n    //left map frame counter, call, and stop\n    if (background.moveMapLeft) {\n      if (background.mapCounter < 64) {\n        background.moveMapFrameLeftStart();\n      } else {\n        background.moveMapFrameLeftStop();\n      };\n    };\n\n    //right map frame counter, call, and stop\n    if (background.moveMapRight) {\n      if (background.mapCounter < 64) {\n        background.moveMapFrameRightStart();\n      } else {\n        background.moveMapFrameRightStop();\n      };\n    };\n\n    //Animates hearts\n    if (heart.show) {\n      ctxEnemyMap.drawImage(heart.image, heart.xFrame, heart.yFrame, heart.pngWidth, heart.pngHeight, heart.x, heart.y, heart.spriteWidth, heart.spriteHeight);\n    };\n    //Animates big hearts\n    if (bigHeart.show) {\n      ctxEnemyMap.drawImage(bigHeart.image, bigHeart.xFrame, bigHeart.yFrame, bigHeart.pngWidth, bigHeart.pngHeight, bigHeart.x, bigHeart.y, bigHeart.spriteWidth, bigHeart.spriteHeight);\n    };\n    //Animates tektites\n    if (!tektite.dead && game.level >= tektite.levelShowUp) {\n      ctxEnemyMap.drawImage(tektite.image, tektite.xFrame, tektite.yFrame, tektite.pngWidth, tektite.pngHeight, tektite.xMove, tektite.yMove, tektite.spriteWidth, tektite.spriteHeight);\n      tektite.moveTektite();\n    };\n\n    //Animates keese\n    if (!keese.dead && game.level >= keese.levelShowUp) {\n      ctxEnemyMap.drawImage(keese.image, keese.xFrame, keese.yFrame, keese.pngWidth, keese.pngHeight, keese.xMove, keese.yMove, keese.spriteWidth, keese.spriteHeight);\n      keese.moveKeese();\n    };\n\n    //Animates gibdo\n    if (!gibdo.dead && game.level >= gibdo.levelShowUp) {\n      ctxEnemyMap.drawImage(gibdo.image, gibdo.xFrame, gibdo.yFrame, gibdo.pngWidth, gibdo.pngHeight, gibdo.xMove, gibdo.yMove, gibdo.spriteWidth, gibdo.spriteHeight);\n      gibdo.moveGibdo();\n    };\n\n    //Animates stalfos\n    if (!stalfos.dead && game.level >= stalfos.levelShowUp) {\n      ctxEnemyMap.drawImage(stalfos.image, stalfos.xFrame, stalfos.yFrame, stalfos.pngWidth, stalfos.pngHeight, stalfos.xMove, stalfos.yMove, stalfos.spriteWidth, stalfos.spriteHeight);\n      stalfos.moveStalfos();\n    };\n\n    //Animates dodongo\n    if (!dodongo.dead && game.level >= dodongo.levelShowUp && dodongo.xMove < 575) {\n      ctxEnemyMap.drawImage(dodongo.image, dodongo.xFrame, dodongo.yFrame, dodongo.pngWidth, dodongo.pngHeight, dodongo.xMove, dodongo.yMove, dodongo.spriteWidth, dodongo.spriteHeight);\n      dodongo.moveDodongo();\n    };\n    if (!dodongo.dead && game.level >= dodongo.levelShowUp && dodongo.xMove >= 575) {\n      dodongo.dead = true;\n      xRightResetOffscreenEnemies(dodongo);\n    };\n\n    //Animates armos\n    if (!armos.dead && game.level >= armos.levelShowUp) {\n      ctxEnemyMap.drawImage(armos.image, armos.xFrame, armos.yFrame, armos.pngWidth, armos.pngHeight, armos.xMove, armos.yMove, armos.spriteWidth, armos.spriteHeight);\n      armos.moveArmos();\n    };\n\n    //Animates wizzrobe\n    if (!wizzrobe.dead && game.level >= wizzrobe.levelShowUp) {\n      ctxEnemyMap.drawImage(wizzrobe.image, wizzrobe.xFrame, wizzrobe.yFrame, wizzrobe.pngWidth, wizzrobe.pngHeight, wizzrobe.xMove, wizzrobe.yMove, wizzrobe.spriteWidth, wizzrobe.spriteHeight);\n      wizzrobe.moveWizzrobe();\n    };\n\n    //Animates darknut\n    if (!darknut.dead && game.level >= darknut.levelShowUp && darknut.yMove < 375) {\n      ctxEnemyMap.drawImage(darknut.image, darknut.xFrame, darknut.yFrame, darknut.pngWidth, darknut.pngHeight, darknut.xMove, darknut.yMove, darknut.spriteWidth, darknut.spriteHeight);\n      darknut.moveDarknut();\n    };\n    if (!darknut.dead && game.level >= darknut.levelShowUp && darknut.yMove >= 375) {\n      darknut.dead = true;\n      yResetOffscreenEnemies(darknut);\n    };\n\n    //Animates aquamentus\n    if (!aquamentus.dead && game.level >= aquamentus.levelShowUp && aquamentus.xMove > -50) {\n      ctxEnemyMap.drawImage(aquamentus.image, aquamentus.xFrame, aquamentus.yFrame, aquamentus.pngWidth, aquamentus.pngHeight, aquamentus.xMove, aquamentus.yMove, aquamentus.spriteWidth, aquamentus.spriteHeight);\n      aquamentus.moveAquamentus();\n    };\n    if (!aquamentus.dead && game.level >= aquamentus.levelShowUp && aquamentus.xMove <= -50) {\n      aquamentus.dead = true;\n      xLeftResetOffscreenEnemies(aquamentus);\n    };\n\n    //Animates moblin\n    if (!moblin.dead && game.level >= moblin.levelShowUp) {\n      ctxEnemyMap.drawImage(moblin.image, moblin.xFrame, moblin.yFrame, moblin.pngWidth, moblin.pngHeight, moblin.xMove, moblin.yMove, moblin.spriteWidth, moblin.spriteHeight);\n      moblin.moveMoblin();\n    };\n\n    //Animates link and explosion steps\n    ctxSpriteMap.drawImage(link.image, link.xFrame, link.yFrame, link.pngWidth, link.pngHeight, link.xMove, link.yMove, link.spriteWidth, link.spriteHeight);\n    link.invincible = $('#invincible').prop('checked');\n\n    if (link.isMovingUp) {\n      link.moveUp();\n    };\n    if (link.isMovingDown) {\n      link.moveDown();\n    };\n    if (link.isMovingLeft) {\n      link.moveLeft();\n    };\n    if (link.isMovingRight) {\n      link.moveRight();\n    };\n\n    //Collision checks\n    //heart\n    heartCollisionDetection(link.xMove, link.yMove, heart.x, heart.y, heart);\n    //big heart\n    heartCollisionDetection(link.xMove, link.yMove, bigHeart.x, bigHeart.y, bigHeart);\n    //tektite\n    enemyCollisionDetection(link.xMove, link.yMove, tektite.xMove, tektite.yMove, tektite);\n    //keese\n    enemyCollisionDetection(link.xMove, link.yMove, keese.xMove, keese.yMove, keese);\n    //gibdo\n    enemyCollisionDetection(link.xMove, link.yMove, gibdo.xMove, gibdo.yMove, gibdo);\n    //stalfos\n    enemyCollisionDetection(link.xMove, link.yMove, stalfos.xMove, stalfos.yMove, stalfos);\n    //dodongo\n    enemyCollisionDetection(link.xMove, link.yMove, dodongo.xMove, dodongo.yMove, dodongo);\n    //armos\n    enemyCollisionDetection(link.xMove, link.yMove, armos.xMove, armos.yMove, armos);\n    //wizzrobe\n    enemyCollisionDetection(link.xMove, link.yMove, wizzrobe.xMove, wizzrobe.yMove, wizzrobe);\n    //darknut\n    enemyCollisionDetection(link.xMove, link.yMove, darknut.xMove, darknut.yMove, darknut);\n    //aquamentus\n    enemyCollisionDetection(link.xMove, link.yMove, aquamentus.xMove, aquamentus.yMove, aquamentus);\n    //moblin\n    enemyCollisionDetection(link.xMove, link.yMove, moblin.xMove, moblin.yMove, moblin);\n\n    //Array of live enemies\n    liveEnemies = allEnemies.filter(function (baddy) {\n      return baddy.dead === false;\n    });\n    //true if all enemies dead; false if enemies alive\n    areEnemiesDead = function () {\n      return liveEnemies.length > 0 ? false : true;\n    };\n\n    //Updates score, high score, level, and kills to advance\n    if (game.score > game.highScore) {\n      game.highScore = game.score;\n      localStorage.highScore = game.highScore;\n    };\n    $('#game-num').html(game.level);\n    $('#score-num').html(game.score);\n    $('#high-score').html(game.highScore);\n\n    animateGame = requestAnimationFrame(animationLoop);\n  } else if (game.over) {\n    game.endTime = Date.now();\n    gameOver();\n  } else if (game.win) {\n    ctxEnemyMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    setTimeout(winGame, 1500);\n  };\n};\n\n//replay and restart game\nvar startGame = function () {\n  if (game.over || game.win) {\n    allEnemies.forEach(function (baddy) {\n      baddy.dead = true;\n      baddy.life = 0;\n    });\n    tektite.dead = false;\n    tektite.life = tektite.maxLife;\n    tektite.xMove = xStarting(tektite.spriteWidth);\n    tektite.yMove = yStarting(tektite.spriteHeight);\n    dodongo.xMove = -100;\n    dodongo.yMove = yStarting(50);\n    heart.show = false;\n    link.life = link.maxLife;\n    link.heartDisplay();\n    link.xMove = xStarting(32);\n    link.yMove = yStarting(35);\n    link.xFrame = 0;\n    link.yFrame = 0;\n    game.win = false;\n    game.over = false;\n    game.level = 1;\n    game.setNeedToKill();\n    game.score = 0;\n    background.xFrame = xMapStart();\n    background.yFrame = yMapStart();\n    deathCanvas.style.opacity = '0';\n    ctxBackgroundMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxExplosionCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxDeathCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxWinCanvas.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxEnemyMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    ctxSpriteMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n    backgroundMap.classList.remove('canvas-blur');\n    enemyMap.classList.remove('canvas-blur');\n    cancelAnimationFrame(titleScreen);\n    clearInterval(randomizeTitle);\n    animationLoop();\n    $('#start-game').css('visibility', 'hidden');\n  };\n};\n\nvar randomizeTitle = setInterval(function () {\n  background.xFrame = xMapStart();\n  background.yFrame = yMapStart();\n  tektite.xMove = xStarting(tektite.spriteWidth);\n  tektite.yMove = yStarting(tektite.spriteHeight);\n  keese.xMove = xStarting(keese.spriteWidth);\n  keese.yMove = yStarting(keese.spriteHeight);\n  gibdo.xMove = xStarting(gibdo.spriteWidth);\n  gibdo.yMove = yStarting(gibdo.spriteHeight);\n  stalfos.xMove = xStarting(stalfos.spriteWidth);\n  stalfos.yMove = yStarting(stalfos.spriteHeight);\n}, 4000);\n\n//title screen\nvar titleScreen = null;\nvar titleScreenLoop = function () {\n  ctxBackgroundMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n  ctxEnemyMap.clearRect(0, 0, enemyMap.width, enemyMap.height);\n  ctxBackgroundMap.drawImage(background.image, background.xFrame, background.yFrame, background.pngWidth, background.pngHeight, 0, 0, background.mapWidth, background.mapHeight);\n\n  ctxSpriteMap.fillStyle = '#36c792';\n  ctxSpriteMap.fillRect(95, 145, 327, 28);\n  ctxSpriteMap.font = \"20px 'Press Start 2P'\";\n  ctxSpriteMap.fillStyle = '#362934';\n  ctxSpriteMap.fillText('Press Start Game', 100, 170);\n\n  ctxEnemyMap.drawImage(tektite.image, tektite.xFrame, tektite.yFrame, tektite.pngWidth, tektite.pngHeight, tektite.xMove, tektite.yMove, tektite.spriteWidth, tektite.spriteHeight);\n  ctxEnemyMap.drawImage(keese.image, keese.xFrame, keese.yFrame, keese.pngWidth, keese.pngHeight, keese.xMove, keese.yMove, keese.spriteWidth, keese.spriteHeight);\n  ctxEnemyMap.drawImage(gibdo.image, gibdo.xFrame, gibdo.yFrame, gibdo.pngWidth, gibdo.pngHeight, gibdo.xMove, gibdo.yMove, gibdo.spriteWidth, gibdo.spriteHeight);\n  ctxEnemyMap.drawImage(stalfos.image, stalfos.xFrame, stalfos.yFrame, stalfos.pngWidth, stalfos.pngHeight, stalfos.xMove, stalfos.yMove, stalfos.spriteWidth, stalfos.spriteHeight);\n  ctxEnemyMap.drawImage(link.image, link.xFrame, link.yFrame, link.pngWidth, link.pngHeight, link.xMove, link.yMove, link.spriteWidth, link.spriteHeight);\n\n  tektite.moveTektite();\n  keese.moveKeese();\n  gibdo.moveGibdo();\n  stalfos.moveStalfos();\n\n  if (coinFlip(2) === 0) {\n    if (link.xMove - stalfos.xMove >= 0) {\n      link.xMove -= 1;\n    } else if (link.xMove - stalfos.xMove < 0) {\n      link.xMove += 1;\n    }\n  } else if (coinFlip(2) === 1) {\n    if (link.yMove - stalfos.yMove >= 0) {\n      link.yMove -= 1;\n    } else if (link.yMove - stalfos.yMove < 0) {\n      link.yMove += 1;\n    };\n  };\n\n  titleScreen = requestAnimationFrame(titleScreenLoop);\n};\n\n//Load high score\nvar getHighScore = function () {\n  if (localStorage.hasOwnProperty('highScore')) {\n    game.highScore = localStorage.highScore;\n  };\n};\n\n//Document ready function for DOM events\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  titleScreenLoop();\n  getHighScore();\n  $('#high-score').text(game.highScore);\n  startGameButton.on('click', startGame);\n  window.addEventListener('keydown', link.playerAction);\n  window.addEventListener('keyup', link.actionStop);\n  $('#up').on('touchstart', link.touchUp);\n  $('#down').on('touchstart', link.touchDown);\n  $('#left').on('touchstart', link.touchLeft);\n  $('#right').on('touchstart', link.touchRight);\n  $('#attack').on('touchstart', link.touchAttack);\n  $('#up').on('touchend', link.touchUpStop);\n  $('#down').on('touchend', link.touchDownStop);\n  $('#left').on('touchend', link.touchLeftStop);\n  $('#right').on('touchend', link.touchRightStop);\n  $('#attack').on('touchend', link.touchAttackStop);\n});\n\n//# sourceURL=webpack:///./src/old-app.js?");

/***/ })

/******/ });